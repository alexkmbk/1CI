 
//
//
Function RunTask(Task, Form, Val Repository = Undefined, Actions = Undefined, TaskDescription = Undefined) Export
		
	RepUserName = Undefined;
	RepPassword = Undefined;
	If Repository = Undefined  Then
		Repository = RepTasks.GetRepository(Task);
	EndIf; 
		
	RepTasks.GetRepPasswordAndUserName(Repository, RepUserName, RepPassword);	
	If ValueIsFilled(RepUserName) Then
		RepTasks.RunTask(Task, True, Repository, RepUserName, RepPassword, Actions, TaskDescription);
	Else
		Params = New Structure("Repository, Task", Repository, Task);
		OpenForm("CommonForm.RepositoryUserNameAndPasswordInput", Params, Form, , WindowOpenVariant.SingleWindow);
	EndIf; 
	
EndFunction

//
//
Function GetSystemEmailAccount() Export
		Return RepTasks.GetSystemEmailAccount();
EndFunction

Procedure DirChoiceResult(SelectedFiles, Params) Export 
	
	If SelectedFiles <> Undefined  Then
		For Each File in SelectedFiles Do
			Params.Object[Params.AttributeName] = File;		
		EndDo 		
	EndIf; 	
	
EndProcedure
 
Procedure DirChoice(Object, AttributeName, Title = Undefined) Export 
	
	DirChoiceDlg = new FileDialog(FileDialogMode.ChooseDirectory);	
	DirChoiceDlg.Title = Title; 
	DirChoiceDlg.Directory = Object[AttributeName];
	Notify = New NotifyDescription("DirChoiceResult",ThisObject, New Structure("Object,AttributeName", Object, AttributeName));
	DirChoiceDlg.Show(Notify);
	
EndProcedure
 
